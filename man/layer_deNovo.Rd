% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layer_denovoMotif.R
\name{layer_deNovo}
\alias{layer_deNovo}
\title{Custom 2-D convolution wrapper with to learn IGMs or PWMs.}
\usage{
layer_deNovo(object, filters, filter_len, lambda_pos = 0,
  lambda_filter = 0, lambda_l1 = 0, lambda_offset = 0,
  strides = c(1L, 1L), padding = "valid", activation = "sigmoid",
  use_bias = TRUE, kernel_initializer = initializer_random_uniform(0,
  0.5), bias_initializer = "zeros",
  kernel_regularizer = total_regularizer,
  kernel_constraint = info_constraint,
  bias_constraint = negative_constraint, input_shape = NULL,
  name = "deNovo_conv", trainable = NULL)
}
\arguments{
\item{object}{Keras model object.}

\item{filters}{Number of convolutional filters.}

\item{filter_len}{Length of the motifs.}

\item{lambda_pos}{Position-wise L1 sparsity penalty.}

\item{lambda_filter}{Sparse group lasso penalty.}

\item{lambda_l1}{Sparse L1 penalty applied to filter weights.}

\item{lambda_offset}{L1 penalty applied the offsets (bias) terms.}

\item{strides}{An integer or list of 2 integers, specifying the strides of the convolution along the width and height. Can be a single integer to specify the same value for all spatial dimensions. Specifying any stride value != 1 is incompatible with specifying any \code{dilation_rate} value != 1.}

\item{padding}{one of "valid" (default) or "same" (case-insensitive).}

\item{activation}{Activation function to use. Default is the sigmoid activation.}

\item{use_bias}{Boolean, whether the layer uses a bias vector. Default is to include a bias.}

\item{kernel_initializer}{Initializer for the \code{kernel} weights matrix. Default is random uniform on \code{(0,0.5)} (i.e. \code{initializer_random_uniform(0,.5)}).}

\item{bias_initializer}{Initializer for the bias vector. Default is \code{'zeros'}.}

\item{kernel_regularizer}{Regularizer function applied to the \code{kernel} weights matrix. Options include \code{NULL}, \code{total_regularizer} (default), \code{position_regularizer}, or \code{filter_regularizer}.}

\item{kernel_constraint}{Constraint function applied to the kernel matrix. Options include \code{NULL}, \code{info_constraint} (default), \code{pwm_constraint}, \code{negative_constraint}, or \code{nonnegative_constraint}.}

\item{bias_constraint}{Constraint function applied to the bias vector.Options include \code{NULL}, \code{negative_constraint} (default), or \code{nonnegative_constraint}.}

\item{input_shape}{Dimensionality of the input (integer) not including the samples axis. This argument is required when using this layer as the first layer in a model.}

\item{name}{An optional name string for the layer. Should be unique in a model (do not reuse the same name twice). It will be autogenerated if it isn't provided. Default is \code{'deNovo_conv'}.}

\item{trainable}{Whether the layer weights will be updated during training. Must be specified.}
}
\value{
A Keras model with the added layer.
}
\description{
Custom 2-D convolution wrapper with regularization and constraints to learn de novo motifs in the form of IGMs or PWMs.
}
\author{
Matthew Ploenzke, \email{ploenzke@g.harvard.edu}
}
\keyword{conv}
\keyword{convolution}
\keyword{denovo}
\keyword{layer}
